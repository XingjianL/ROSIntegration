#pragma once

#include <CoreMinimal.h>
#include <UObject/ObjectMacros.h>
#include <UObject/Object.h>
#include "ROSIntegrationGameInstance.h"
#include "TCPConnection.h"
//#include "TCPConnection.h"
#include "WebsocketConnection.h"
#include "ros_bridge.h"
#include "ros_topic.h"
#include "ROSIntegrationCore.generated.h"

ROSINTEGRATION_API DECLARE_LOG_CATEGORY_EXTERN(LogROS, Display, All);


class USpawnManager;


class TDeleterNot
{
public:
	void operator()(void*) {}
};



// Wrapper of the private implementation of ROSIntegrationCore inside UObject 
UCLASS()
class ROSINTEGRATION_API UImpl : public UObject
{
	GENERATED_UCLASS_BODY()

protected:

	// PIMPL
	class Impl
	{
	public:
		bool _bson_test_mode;
		UWorld* _World = nullptr;
		//UPROPERTY() // this UPROPERTY is completely useless and its ignored by the metacompiler which works only on headers  
		USpawnManager* _SpawnManager = nullptr;
		std::unique_ptr<rosbridge2cpp::ROSTopic> _SpawnMessageListener;
		std::unique_ptr<rosbridge2cpp::ROSTopic> _SpawnArrayMessageListener;
	private:
		// hidden implementation details
		TCPConnection* _TCPConnection = nullptr;
		WebsocketConnection* _WebsocketConnection = nullptr;
		rosbridge2cpp::ROSBridge* _Ros = nullptr;
		FString _ROSBridgeHost;
		int32 _ROSBridgePort;

	public:
		Impl();
		~Impl();
		rosbridge2cpp::ROSBridge& GetBridge();
		void SpawnArrayMessageCallback(const ROSBridgePublishMsg& message);
		void SpawnMessageCallback(const ROSBridgePublishMsg& message);
		bool IsHealthy() const;
		void SetWorld(UWorld* World);
		void SetImplSpawnManager(USpawnManager* SpawnManager);
		bool Init(FString protocol, FString ROSBridgeHost, int32 ROSBridgePort, bool bson_test_mode);
		FString GetROSBridgeHost() const;
		int32 GetROSBridgePort() const;
		void InitSpawnManager();
	};
	TSharedPtr<Impl> impl_ = nullptr;

public: 

	UImpl();
	~UImpl();

	void Init();

	void BeginDestroy() override;

	void SetImplSpawnManager(USpawnManager* SpawnManager);

	FORCEINLINE TSharedPtr<Impl>& Get()
	{
		if (!impl_)
		{
			UE_LOG(LogROS, Error, TEXT("ROSIntegrationCore - UImpl empty"));
		}
		return impl_;
	}

};


UCLASS()
class ROSINTEGRATION_API UROSIntegrationCore : public UObject
{
	GENERATED_UCLASS_BODY()

public:

	~UROSIntegrationCore();

	bool Init(FString protocol, FString ROSBridgeHost, int32 ROSBridgePort);

	bool IsHealthy() const;

	FString GetROSBridgeHost() const;

	int32 GetROSBridgePort() const;

	// You must call Init() before using this method to set up the Implmentation correctly
	void SetWorld(UWorld* World);

	void InitSpawnManager();

	void BeginDestroy() override;

private:

	UPROPERTY()
	class UImpl* _Implementation = nullptr; // N.B: here there was the private implementation: a standard pointer which contained the USpawnManager.
											// This was manually added inside the GargageCollector by using the UObject::AddToRoot() method.
											// After its creation, USpawnManager object was never destroyed. Now, with this change,
											// its destruction should be automatically managed by the GargageCollector.

	UPROPERTY()
	USpawnManager* _SpawnManager = nullptr; // generated by this class and used by the _Implementation 

	bool _bson_test_mode = true;

	friend class UTopic;
	friend class UService;
};
